import fs from 'fs/promises'
import path from 'path'

const __dirname = path.dirname(new URL(import.meta.url).pathname)

async function moveSvelteDistFiles() {
  const distDir = path.join(__dirname, '/dist')
  const svelteDir = path.join(distDir, '/svelte')

  try {
    // Ensure the svelte directory exists
    await fs.mkdir(svelteDir, { recursive: true })

    // Read the files in the dist directory
    const files = await fs.readdir(distDir)

    // Move each file to the svelte directory
    for (let file of files) {
      const currentPath = path.join(distDir, file)
      const targetPath = path.join(svelteDir, file)

      // To avoid moving the 'svelte' directory into itself
      if (file !== 'svelte') {
        await fs.rename(currentPath, targetPath)
      }
    }

    console.log('All files moved successfully and .svelte-kit directory deleted!')
  } catch (error) {
    console.error('An error occurred:', error.message)
  }
}

async function deleteSvelteKitFolder() {
  const svelteKitDir = path.join(__dirname, './.svelte-kit')

  // Delete the .svelte-kit directory generated by `svelte-package`
  await fs.rm(svelteKitDir, { recursive: true, force: true })
}

moveSvelteDistFiles()
deleteSvelteKitFolder()
